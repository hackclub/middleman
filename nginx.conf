events {}

http {
    log_format common '$http_x_real_ip - $remote_user [$time_local] "$request" '
    '$upstream_status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format main '[$time_local] status=$upstream_status'
    'addr=$http_x_real_ip user=$remote_user method="$request" '
    'bytes=$body_bytes_sent ref="$http_referer" '
    'ua="$http_user_agent" fwd="$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    server {
        listen 80;

        location / {
            return 302 https://github.com/hackclub/middleman;
        }

        location /airtable {
            # Set a timeout for requests
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;

            # Forward all requests to Airtable API
            rewrite ^/airtable(/.*)$ $1 break;
            proxy_pass https://api.airtable.com/;

            # Preserve headers if needed
            proxy_set_header Host api.airtable.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Error handling to return responses even if an error occurs
            proxy_intercept_errors off;
        }
    }
}